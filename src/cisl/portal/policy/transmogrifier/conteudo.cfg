[transmogrifier]
pipeline =
    source
    transform-path
    condition
    refactor
    folder
    constructor
    schema-at
    schema-dx
    uid
    workflow-refactor
    workflow-history
    datafields
    mimetype
    browserdefault
    reindexobject
    logger
    savepoint

[source]
blueprint = brasil.sections.jsonsource
directory = FILLME

[transform-path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:item.get('_path', '').replace('/clientes/softwarelivre/softwarelivre/', '/')

[condition]
blueprint = collective.transmogrifier.sections.condition
condition = python:item.get('_type', '')

[refactor]
blueprint = cisl.sections.refactor

[folder]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schema-at]
blueprint = plone.app.transmogrifier.atschemaupdater

[schema-dx]
blueprint = transmogrify.dexterity.schemaupdater
disable-constraints = python:True

[uid]
blueprint = plone.app.transmogrifier.uidupdater

[workflow-refactor]
blueprint = cisl.sections.workflow

[workflow-history]
blueprint = collective.jsonmigrator.workflowhistory

[datafields]
blueprint = brasil.sections.datafields

[mimetype]
blueprint = collective.jsonmigrator.mimetype

[debug]
# Add this into the pipeline to get a pdb prompt for debugging
blueprint = collective.transmogrifier.sections.inserter
key = string:debug
value = python:modules['pdb'].set_trace()
condition = python:'imagens/desert.jpg' in item.get('_path', '')

[browserdefault]
blueprint = plone.app.transmogrifier.browserdefault

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 100

[logger]
blueprint = collective.transmogrifier.sections.logger
level = INFO
name = SoftwareLivre.gov.br:
key = _path
